#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–∞–∫–µ—Ç–∞ –Ω–∞ PyPI
"""

import os
import subprocess
import sys
from pathlib import Path


def run_command(cmd, description):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º"""
    print(f"üîß {description}...")
    result = subprocess.run(cmd, shell=True, capture_output=True, text=True)

    if result.returncode != 0:
        print(f"‚ùå –û—à–∏–±–∫–∞: {result.stderr}")
        return False
    else:
        print(f"‚úÖ {description} –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
        if result.stdout.strip():
            print(f"   {result.stdout.strip()}")
        return True


def check_dist_files():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"""
    dist_dir = Path('dist')

    if not dist_dir.exists():
        print("‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è dist/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ build_package.py")
        return False

    dist_files = list(dist_dir.glob('*'))
    if not dist_files:
        print("‚ùå –§–∞–π–ª—ã –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ dist/")
        return False

    print("üì¶ –§–∞–π–ª—ã –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:")
    for file_path in dist_files:
        print(f"   - {file_path}")

    return True


def final_checks():
    """–§–∏–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π"""
    print("üîç –§–∏–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏...")

    checks = [
        "‚úÖ –ö–æ–¥ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω",
        "‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞",
        "‚úÖ –í–µ—Ä—Å–∏—è —É–≤–µ–ª–∏—á–µ–Ω–∞",
        "‚úÖ CHANGELOG.md –æ–±–Ω–æ–≤–ª–µ–Ω",
        "‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ",
        "‚úÖ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã –≤ git"
    ]

    print("\nüìã –ß–µ–∫-–ª–∏—Å—Ç –ø–µ—Ä–µ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π:")
    for check in checks:
        print(f"   {check}")

    print("\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞ –†–ï–ê–õ–¨–ù–´–ô PyPI!")
    print("   –ü–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–µ—Ä—Å–∏—é –Ω–µ–ª—å–∑—è –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å.")

    response = input("\n‚ùì –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã? –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/N): ").strip()

    return response.lower() == 'yes'


def publish_to_pypi():
    """–ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞ PyPI"""
    print("üöÄ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞ PyPI...")

    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–∞ PyPI
    cmd = "python -m twine upload dist/*"

    print("üìã –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:")
    print(f"   {cmd}")
    print("\n‚ö†Ô∏è  –í–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è:")
    print("   - –ê–∫–∫–∞—É–Ω—Ç –Ω–∞ https://pypi.org/")
    print("   - API —Ç–æ–∫–µ–Ω –∏–ª–∏ –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å")
    print("\nüîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–æ–∫–µ–Ω–∞:")
    print("   1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ https://pypi.org/manage/account/")
    print("   2. –°–æ–∑–¥–∞–π—Ç–µ API —Ç–æ–∫–µ–Ω")
    print("   3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ __token__ –∫–∞–∫ username –∏ —Ç–æ–∫–µ–Ω –∫–∞–∫ password")

    # –§–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    response = input("\n‚ùì –§–ò–ù–ê–õ–¨–ù–û–ï –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï: –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –Ω–∞ PyPI? (YES/N): ").strip()

    if response != 'YES':
        print("‚ùå –ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
        return False

    # –í—ã–ø–æ–ª–Ω–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é
    result = subprocess.run(cmd, shell=True)

    if result.returncode == 0:
        print("‚úÖ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞ PyPI —É—Å–ø–µ—à–Ω–∞!")
        print("\nüéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ü–∞–∫–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!")
        print("\nüìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–∫–µ—Ç:")
        print("   https://pypi.org/project/docxmd-converter/")
        print("\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞:")
        print("   pip install docxmd-converter")
        print("\nüìä –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("   1. –û–±–Ω–æ–≤–∏—Ç–µ README —Å –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–µ–π")
        print("   2. –°–æ–∑–¥–∞–π—Ç–µ git tag –¥–ª—è –≤–µ—Ä—Å–∏–∏")
        print("   3. –û–ø—É–±–ª–∏–∫—É–π—Ç–µ release –Ω–∞ GitHub")
        return True
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏")
        return False


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø–∞–∫–µ—Ç–∞ DocxMD Converter –Ω–∞ PyPI")
    print("=" * 60)

    # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    script_dir = Path(__file__).parent
    root_dir = script_dir.parent
    os.chdir(root_dir)

    print(f"üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    if not check_dist_files():
        sys.exit(1)

    # –§–∏–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
    if not final_checks():
        print("‚ùå –ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
        sys.exit(1)

    # –ü—É–±–ª–∏–∫–∞—Ü–∏—è
    if not publish_to_pypi():
        sys.exit(1)

    print("=" * 60)
    print("üéâ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞ PyPI –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")


if __name__ == "__main__":
    main()