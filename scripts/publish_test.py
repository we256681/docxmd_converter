#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–∞–∫–µ—Ç–∞ –Ω–∞ TestPyPI
"""

import os
import subprocess
import sys
from pathlib import Path


def run_command(cmd, description):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º"""
    print(f"üîß {description}...")
    result = subprocess.run(cmd, shell=True, capture_output=True, text=True)

    if result.returncode != 0:
        print(f"‚ùå –û—à–∏–±–∫–∞: {result.stderr}")
        return False
    else:
        print(f"‚úÖ {description} –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
        if result.stdout.strip():
            print(f"   {result.stdout.strip()}")
        return True


def check_dist_files():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"""
    dist_dir = Path('dist')

    if not dist_dir.exists():
        print("‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è dist/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ build_package.py")
        return False

    dist_files = list(dist_dir.glob('*'))
    if not dist_files:
        print("‚ùå –§–∞–π–ª—ã –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ dist/")
        return False

    print("üì¶ –§–∞–π–ª—ã –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:")
    for file_path in dist_files:
        print(f"   - {file_path}")

    return True


def publish_to_testpypi():
    """–ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞ TestPyPI"""
    print("üöÄ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞ TestPyPI...")

    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–∞ TestPyPI
    cmd = "python -m twine upload --repository testpypi dist/*"

    print("üìã –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:")
    print(f"   {cmd}")
    print("\n‚ö†Ô∏è  –í–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è:")
    print("   - –ê–∫–∫–∞—É–Ω—Ç –Ω–∞ https://test.pypi.org/")
    print("   - API —Ç–æ–∫–µ–Ω –∏–ª–∏ –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å")
    print("\nüîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–æ–∫–µ–Ω–∞:")
    print("   1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ https://test.pypi.org/manage/account/")
    print("   2. –°–æ–∑–¥–∞–π—Ç–µ API —Ç–æ–∫–µ–Ω")
    print("   3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ __token__ –∫–∞–∫ username –∏ —Ç–æ–∫–µ–Ω –∫–∞–∫ password")

    # –°–ø—Ä–æ—Å–∏—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    response = input("\n‚ùì –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é? (y/N): ").strip().lower()

    if response != 'y':
        print("‚ùå –ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
        return False

    # –í—ã–ø–æ–ª–Ω–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é
    result = subprocess.run(cmd, shell=True)

    if result.returncode == 0:
        print("‚úÖ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞ TestPyPI —É—Å–ø–µ—à–Ω–∞!")
        print("\nüìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–∫–µ—Ç:")
        print("   https://test.pypi.org/project/docxmd-converter/")
        print("\nüß™ –¢–µ—Å—Ç–æ–≤–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞:")
        print("   pip install -i https://test.pypi.org/simple/ docxmd-converter")
        return True
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏")
        return False


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß™ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø–∞–∫–µ—Ç–∞ DocxMD Converter –Ω–∞ TestPyPI")
    print("=" * 60)

    # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    script_dir = Path(__file__).parent
    root_dir = script_dir.parent
    os.chdir(root_dir)

    print(f"üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    if not check_dist_files():
        sys.exit(1)

    # –ü—É–±–ª–∏–∫–∞—Ü–∏—è
    if not publish_to_testpypi():
        sys.exit(1)

    print("=" * 60)
    print("üéâ –¢–µ—Å—Ç–æ–≤–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")


if __name__ == "__main__":
    main()