name: Continuous Integration

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", 3.11, 3.12]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        timeout-minutes: 10
        run: |
          # Disable man-db triggers to prevent hanging
          sudo rm -f /var/lib/man-db/auto-update
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update -q
          sudo apt-get install -y -q --no-install-recommends pandoc
          # Verify pandoc installation
          pandoc --version

      - name: Install dependencies
        timeout-minutes: 20
        run: |
          python -m pip install --upgrade pip --quiet
          pip install -e .[dev] --quiet

      - name: Run linting
        run: |
          black --check .
          isort --check-only .
          flake8 --config=.flake8 . --exclude=venv,build,dist

      - name: Run type checking (non-blocking)
        if: matrix.python-version == '3.11'
        continue-on-error: true
        run: |
          mypy docxmd_converter --ignore-missing-imports

      - name: Run tests
        run: |
          pytest tests/ -v --cov=docxmd_converter --cov-report=xml

      - name: Test Enhanced Processor
        run: |
          python -c "from docxmd_converter.enhanced_processor import EnhancedDocumentProcessor; print('✅ Enhanced Processor v' + EnhancedDocumentProcessor().version + ' готов')"

      - name: Test CLI
        run: |
          docxmd --version
          docxmd --help

  build-check:
    needs: test
    runs-on: ubuntu-latest
    # Только проверяем сборку, не публикуем
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install build dependencies
        timeout-minutes: 10
        run: |
          python -m pip install --upgrade pip --quiet
          pip install build twine --quiet

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-check-${{ github.sha }}
          path: dist/
          retention-days: 7
